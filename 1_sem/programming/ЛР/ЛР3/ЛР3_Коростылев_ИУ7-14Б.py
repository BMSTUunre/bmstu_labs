"""
Лабораторная работа по программированию №3
1 семестр; сентябрь 2024 года
Коростылев Егор ИУ7-14Б

Программа выводящая информацию о треугольнике, заданном на плоскости 3мя точками,
    а также информацию о положении другой точки, относительно треугольника
"""

# Блок 0: Подключение необходимых библиотек
from math import sqrt, exp

# Блок 1: Ввод исходных точек (вершин треугольника).
x1 = int(input(">Введите значение координаты x для первой точки: "))  # Возьмем, что первая точка - вершина A
y1 = int(input(">Введите значение координаты y для первой точки: "))
x2 = int(input(">Введите значение координаты x для второй точки: "))  # Возьмем, что вторая точка - вершина B
y2 = int(input(">Введите значение координаты y для второй точки: "))
x3 = int(input(">Введите значение координаты x для третьей точки: "))  # Возьмем, что третья точка - вершина C
y3 = int(input(">Введите значение координаты y для третьей точки: "))

# Блок 2: Вычисление длин сторон и высоты.
ab = sqrt(abs(x1 - x2) ** 2 + abs(y1 - y2) ** 2)
bc = sqrt(abs(x2 - x3) ** 2 + abs(y2 - y3) ** 2)
ac = sqrt(abs(x1 - x3) ** 2 + abs(y1 - y3) ** 2)

p = (ab + bc + ac) / 2  # Полу периметр.
s = sqrt(p * (p - ab) * (p - bc) * (p - ac))  # Площадь по формуле Герона.
# Будем искать высоту из большего угла по формуле площади s = ah/2, где a - противолежащая сторона.
# Очевидно, что против большей стороны лежит больший угол.
if ab >= bc:
    if ab >= ac:
        h = s * 2 / ab
    else:
        h = s * 2 / ac
else:
    h = s * 2 / bc

# Блок 3: Проверка треугольника на равнобедренность.
eps = exp(-8)
if abs(ab - bc) < eps or abs(ab - ac) < eps or abs(bc - ac) < eps:
    double_side_equal = True
else:
    double_side_equal = False

# Блок 4: Вывод промежуточных результатов.
print("Cтороны треугольника:\n·\t{:5f}\n·\t{:5f}\n·\t{:5f}\n".format(ab, bc, ac))
print("Высота из наименьшего угла: {:5f}".format(h))
print('Треугольник равнобедренный.' if double_side_equal else 'Треугольник не равнобедренный')

# Блок 5: Ввод координат дополнительной точки.
xo = float(input(">Введите значение координаты x точки: "))
yo = float(input(">Введите значение координаты y точки: "))

# Блок 6: Определение находится ли точка в треугольнике.
# Будем действовать по правилу площадей -
#   Если сумма площадей 3‑х треугольников, образованных с помощью двух вершин исходного и данной точки,
#   равна площади исходного треугольника => точка лежит в треугольнике.

ao = sqrt(abs(x1 - xo) ** 2 + abs(y1 - yo) ** 2)  # Расстояние от точки O до вершины A
bo = sqrt(abs(x2 - xo) ** 2 + abs(y2 - yo) ** 2)  # Расстояние от точки O до вершины B
co = sqrt(abs(x3 - xo) ** 2 + abs(y3 - yo) ** 2)  # Расстояние от точки O до вершины C

po_ab = (ab + ao + bo) / 2  # полу периметр треугольника OAB
so_ab = sqrt(po_ab * (po_ab - ab) * (po_ab - ao) * (po_ab - bo))  # площадь треугольника OAB

po_bc = (bc + bo + co) / 2  # полу периметр треугольника OBC
so_bc = sqrt(po_bc * (po_bc - bc) * (po_bc - bo) * (po_bc - co))  # площадь треугольника OBC

po_ac = (ac + ao + co) / 2  # полу периметр треугольника OAC
so_ac = sqrt(po_ac * (po_ac - ac) * (po_ac - ao) * (po_ac - co))  # площадь треугольника OAC

print(so_ab, so_ac, so_bc, s)
if abs(s - (so_ab + so_bc + so_ac)) < eps:
    point_in_triangle = True
else:
    point_in_triangle = False

# Блок 7: Определение расстояния от точки до стороны треугольника.
# Будем находить наименьшую высоту трех вышеупомянутых треугольников.
h_to_ab = so_ab * 2 / ab
h_to_bc = so_bc * 2 / bc
h_to_ac = so_ac * 2 / ac
if h_to_ab <= h_to_bc:
    if h_to_ab <= h_to_ac:
        point_h = h_to_ab
    else:
        point_h = h_to_ac
else:
    point_h = h_to_bc

# Блок 8: Вывод окончательных результатов.
print('Точка находится внутри треугольника' if point_in_triangle else 'Точка вне Треугольника')
print('Наименьшее расстояние от точки до стороны треугольника: {:5f}'.format(point_h))
