"""
Лабораторная работа по программированию №12
1 семестр; декабрь 2024 года
Коростылев Егор ИУ7-14Б

Задача:
        Написать программу для выполнения некоторых операций с текстом. Вводить текст не
    требуется, он должен быть задан в исходном тексте программы в виде списка строк
    (при выводе на экран каждый элемент этого списка должен начинаться с новой
    строки). В качестве текста в программе следует указать фрагмент литературного
    произведения из 5-7 предложений, который разбить на 7-10 строк.
    Программа должна позволять с помощью меню выполнить следующие действия:
        1. Выровнять текст по левому краю.
        2. Выровнять текст по правому краю.
        3. Выровнять текст по ширине.
        4. Удаление всех вхождений заданного слова.
        5. Замена одного слова другим во всём тексте.
        6. Вычисление арифметических выражений над целыми числами внутри текста
            вычитание и деление.
        7. Найти (вывести на экран) и затем удалить предложение с максимальным
            количеством слов на заданную букву.

"""


from text_funcs import *


def input_int(text: str, allow_negative=True, allow_zero=True):
    n = input(text).strip()
    while not ((allow_negative and n.lstrip('-').isalnum() or n.isalnum()) and (allow_zero or int(n) > 0)):
        print('Значение должно быть целочисленным.')
        n = input(text).strip()
    return int(n)


texts = [
    [
        'Я говорю о Томасе Уэйде, тогдашнем руководителе Агентства',
        'стратегической разведки при Совете Обороны Планеты. Считаю,',
        'что его тоже нужно поблагодарить. Настала тишина. Никто ',
        'не торопился поддержать предложение Чэн Синь. Для большинства',
        'собравшихся Уэйд олицетворял все темные стороны, присущие',
        'характеру людей Общей Эры. Он был полной противоположностью',
        'этой прекрасной женщине, которую в свое время чуть не',
        'убил. Многие содрогнулись от одной только мысли о нем.'
    ],
    [
        'Мы никогда не встречались. Я Слушатель, передавший',
        'предупреждение на Землю два с половиной века',
        'назад. — Боже мой, и вы еще живы? — воскликнула',
        'Чжуан Янь. Мне уже недолго осталось. Меня много абоба абоба абоба      Зелибоба',
        'лет хранили в дегидрированном состоянии, но даже',
        'обезвоженное тело стареет. Тем не менее я счастлив,',
        'что собственными глазами увидел то будущее, к',
        'которому стремился.'
    ],
    [
        'Земля светилась красным, как кусок железа в кузнечном горне. Раскаленные ',
        'потоки лавы змеились по багровой равнине, словно огненная сеть расстелилась ',
        'от горизонта до горизонта. К небу поднимались бесчисленные тонкие столбы ',
        'пламени — это горели дегидратории. Сгорающие внутри них сухие оболочки ',
        'придавали огню странный голубоватый оттенок. Неподалеку Ван увидел около ',
        'десятка маленьких столбов пламени того же необычного цвета. Это горели те, ',
        'кто выскочил из пирамиды чуть раньше: папа, Галилей, Аристотель, Леонардо и ',
        'прочие. Пламя вокруг них было прозрачно-голубое, и Ван различал, как их лица ',
        'и тела коробятся в огне.'
    ],
    [
        "5 - 3",
        '4 / 2'
    ]
    ]


def text_select() -> tuple[list[list[str]], str]:
    print('Отрывки из введенных текстов:')
    for i in range(len(texts)):
        print(f'\t{i + 1} - {texts[i][:50]}')

    while True:
        n = input_int('Введите номер нужного текста\n>', False) - 1
        if 0 <= n < len(texts):
            break

    matrix = text_to_matrix(texts[n])
    return matrix, '3-1'


def text_to_matrix(text: list[str]) -> list[list[str]]:
    matrix = []
    for i in range(len(text)):
        line = []
        for word in text[i].split():
            word = word.strip()
            if word:
                line.append(word + ' ')
        line[-1] = line[-1].strip()
        matrix.append(line)

    print('>Текст успешно установлен.')
    return matrix


def mode_select() -> str:
    n = input(
        """
        \nВыберите функцию:

        0 или пустой ввод - Завершение программы
            1\t- Вывод текста, если он установлен
            2\t- Установка текста
            3-1\t- Выравнивание по левому краю
            3-2\t- Выравнивание по правому краю
            3-3\t- Выравнивание по ширине
            4\t- Удаление слова из текста
            5\t- Замена слова из текста
            6\t- Вычисления ариф. выражения если оно есть
            7\t- Найти и удалить предложение с максимальным 
                количеством слов, начинающихся на заданную букву.\n> """
    )
    if (n not in ('', '3-1', '3-2', '3-3')) and (int(n) < 0 or int(n) > 7):
        return mode_select()
    return n


def main(cur_matrix, aligned):
    while True:
        n = mode_select()
        if not n or n == '0':
            print("\n\t__--__ До свидания __--__")
            break
        cur_matrix, aligned = funcs_list(n, cur_matrix, aligned)


if __name__ == "__main__":
    cur_matrix = []
    aligned = '3-1'
    main(cur_matrix, aligned)
